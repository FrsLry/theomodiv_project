model{

  # Define the underlying model - as well as the observation process (although not used here - d = 1)
  for(i in 1:n_site){
    for(j in 2:n_year){
      for(s in 1:n_species){
        obs[s,i,j] ~ dbern(x[s,i,j]*detect[s,i,j])
        x[s,i,j] ~ dbern( x[s,i,j-1] * (1-e[s,i,j]) + (1-x[s,i,j-1])*c[s,i,j] )
        #variante abundance
        #obs[s,i,j] ~ dbinom(x[s,i,j]*detect[s,i,j], N[s,i,j]) #this should make the likelihood be binomial with p as before but N equal to observation at the site at the time
        #x[s,i,j] ~ dbern( x[s,i,j-1] * (1-e[s,i,j]) + (1-x[s,i,j-1])*c[s,i,j] ) #this is the p you get from the model
      }
    }
  }

  
  # For first year, init with from psi parameter (because the first needs to be fitted)
  for(i in 1:n_site){
    for(s in 1:n_species){
      x[s,i,1] ~ dbern(psi[s]*detect[s,i,j]) 
    }
  }
  
  # Define site-specific extinction and colonisation rate

  # Indicating the logit link
  for(i in 1:n_site){
  for(j in 2:n_year){
    for(s in 1:n_species){
      logit(e[s,i,j]) = mu_e[s] + gamma_e[s] * obs[switch[s],i,j-1] # elevation: beta_e[s] * elev[i,1]
      logit(c[s,i,j]) = mu_c[s] + gamma_c[s] * obs[switch[s],i,j-1] # elevation: beta_c[s] * elev[i,1]
    }
  }
  }


  for(s in 1:n_species){
    logit(psi[s]) = psi_log[s]

    mu_e[s] ~ dnorm(0, 0.1)
    #beta_e[s] ~ dnorm(0, 0.1)
    #beta_sqr_e[s] ~ dnorm(0, 0.1)

    mu_c[s] ~ dnorm(0, 0.1)
    #beta_c[s] ~ dnorm(0, 0.1)
    #beta_sqr_c[s] ~ dnorm(0, 0.1)


    psi_log[s] ~ dnorm(0, 0.1)

    gamma_e[s] ~ dnorm(0, 0.1)T(0,)
    gamma_c[s] ~ dnorm(0, 0.1)T(,0)
  

    mu_day[s] ~ dnorm(0, 10)
    beta_day[s] ~ dnorm(0, 10)

  }
  
#detection

for(i in 1:n_site){
  for(j in 2:n_year){ #should this be 1? As it affects also whether species is detected at time 1
    for(s in 1:n_species){
      logit(detec[s,i,j]) = mu_day[s] + beta_d[s] * time_day[i,1] #what about here? -> instead of time_day, use obe (where the data are)
      logit(detec[s,i,j]) = mu_day[s] + beta_d[s] * time_day[i,1]
    }
  }
  }
 	

}